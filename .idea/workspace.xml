<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ba8853a9-5661-4a2f-b3d3-acf3e6c65591" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/app/blank/client.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/blank/page.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/blank/page.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/profile/client.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/profile/page.scss" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/app/profile/page.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/shared/hooks/usePrivatePage.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/shared/icons/exclamationTriangle.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/shared/models/News.model.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/shared/queries/main/cartItemsClearQuery.query.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/cart/client.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/cart/client.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/cart/page.scss" beforeDir="false" afterPath="$PROJECT_DIR$/app/cart/page.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/home/client.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/home/client.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/home/components/PHomeArticles/index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/app/home/components/PHomeArticles/index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/home/components/PHomeArticles/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/home/components/PHomeArticles/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/home/components/PHomeBrands/index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/app/home/components/PHomeBrands/index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/home/components/PHomeBrands/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/home/components/PHomeBrands/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/home/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/home/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/product/[slug]/client.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/product/[slug]/client.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/components/cart/CCartItem/index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/shared/components/cart/CCartItem/index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/components/cart/CCartItem/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/components/cart/CCartItem/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/components/catalog/CCatalogProduct/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/components/catalog/CCatalogProduct/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/contants/routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/contants/routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/hooks/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/hooks/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/hooks/useIsBooting.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/hooks/useIsBooting.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/icons/heart.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/icons/heart.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/icons/heartFilled.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/icons/heartFilled.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/icons/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/icons/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/layout/LayoutFooter/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/layout/LayoutFooter/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/layout/LayoutHeaderLogin/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/layout/LayoutHeaderLogin/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/models/CatalogProduct.model.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/models/CatalogProduct.model.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/models/CatalogProductOffer.model.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/models/CatalogProductOffer.model.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/models/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/models/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/queries/frontend/home.query.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/queries/frontend/home.query.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/queries/main/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/queries/main/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/services/Cart.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/services/Cart.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/services/User.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/shared/services/User.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/ui/UiButton/index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/shared/ui/UiButton/index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/ui/UiPage/components/Title/index.scss" beforeDir="false" afterPath="$PROJECT_DIR$/shared/ui/UiPage/components/Title/index.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/ui/UiPage/components/Title/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/ui/UiPage/components/Title/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/shared/ui/UiQuantity/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/shared/ui/UiQuantity/index.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2S6uxdTsl1j95gn7HQCz8EQt9fG" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.laravel-idea.search-composer-json": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "dev",
    "last_opened_file_path": "/home/izica/git/yaplus-frontend/shared/icons",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "yarn",
    "ts.external.directory.path": "/home/izica/git/yaplus-frontend/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/shared/icons" />
      <recent name="$PROJECT_DIR$/shared/queries/main" />
      <recent name="$PROJECT_DIR$/shared/ui/UiPage/components" />
      <recent name="$PROJECT_DIR$/shared/hooks" />
      <recent name="$PROJECT_DIR$/app" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="docker-deploy" />
      </set>
    </option>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ba8853a9-5661-4a2f-b3d3-acf3e6c65591" name="Changes" comment="" />
      <created>1688479599508</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1688479599508</updated>
      <workItem from="1688479602473" duration="19020000" />
      <workItem from="1688542704279" duration="10374000" />
      <workItem from="1688570207794" duration="5407000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>